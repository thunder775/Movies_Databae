{"version":3,"sources":["assets/logo.PNG","MovieCard/index.js","searchPage/index.js","Grid/index.js","details_page/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Card","card","props","cardDetails","path","this","to","className","src","alt","substring","React","Component","SearchPage","useState","setPath","isElongated","setOnclick","type","id","onChange","event","target","value","onClick","Grid","moviesList","setMoviesList","pageNumber","a","console","log","fetch","undefined","match","params","query","then","response","json","data","isNaN","Number","useEffect","getMoviesData","length","key","JSON","stringify","require","map","element","YouTube","title","style","position","top","left","width","height","frameBorder","DetailsPage","state","movie","playVid","getMovieData","setState","backgroundImage","backdrop_path","toggleYoutube","poster_path","original_title","overview","closeYoutube","videos","results","App","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.85258854.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3bfccc6c.PNG\";","import React from \"react\";\nimport './styles.css'\nimport {Link,} from \"react-router-dom\";\n\nclass Card extends React.Component {\n    card = this.props.cardDetails;\n\n    render() {\n        let path = \"/details/\" + this.card[\"id\"];\n        return (\n            <Link to={path}>\n                <div className={\"movie-card\"}>\n\n                    <img src={\"https://image.tmdb.org/t/p/original\" + this.card[\"poster_path\"]} alt=\"\"\n                         className={\"image\"}/>\n                    <div className={\"grid-item-hover\"}/>\n                         <div className={\"details\"}>\n                        <p className={\"title\"}>{this.card[\"original_title\"]}</p>\n                        <div className={\"footer-card\"}>\n                            <div className={\"bottom\"}><p>{this.card[\"overview\"].substring(0, 100)}</p>\n                                <div className={\"content-rating\"}>\n                                    <p>{this.card[\"vote_average\"]}</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Link>\n        );\n    }\n}\n\nexport default Card;","import React, {useState} from \"react\";\nimport {Link} from \"react-router-dom\";\n\nexport default function SearchPage(props) {\n    let [path, setPath] = useState('/search');\n    let [isElongated, setOnclick] = useState(false);\n    return (\n        <div className={'search-bar-div'}>\n            <input type=\"text\" id=\"input-field\" className={`search-input-field ${isElongated && \"elongated\"}`}\n                   onChange={(event) => setPath(`/search/${event.target.value}`)} onClick={() => setOnclick(true)}/>\n            <Link to={path} onClick={() => setOnclick(false)}>\n                <i className=\"fa fa-search search-button\"/>\n                {/*<button className={\"search-button\"} >Search</button>*/}\n            </Link>\n        </div>\n    );\n}\n\n\n","import React, {useEffect, useState} from \"react\";\nimport Card from \"../MovieCard\";\nimport './styles.css';\nimport {Link} from \"react-router-dom\";\nimport SearchPage from \"../searchPage\";\n\nfunction Grid(props) {\n    let [moviesList, setMoviesList] = useState([]);\n\n    async function getMoviesData(pageNumber) {\n        console.log(\"from getmovies-----\" + pageNumber);\n        fetch(props.match.params.query === undefined ? 'https://api.themoviedb.org/3/discover/movie?api_key=9b153f4e40437e115298166e6c1b997c&page=' + pageNumber : `https://api.themoviedb.org/3/search/movie?query=${props.match.params.query}&api_key=9b153f4e40437e115298166e6c1b997c`,\n        )\n            .then(async (response) => {\n                let data = await response.json();\n                setMoviesList(data[\"results\"])\n            });\n    }\n\n\n       let  pageNumber = props.match.params.pageNumber === undefined ? 1 : props.match.params.pageNumber;\n        if (isNaN(Number(pageNumber))) {\n            pageNumber = 1;\n        } else {\n            pageNumber = Number(pageNumber);\n        }\n\n    useEffect(() => {\n        console.log(props.match.params)\n        getMoviesData(props.match.params.pageNumber === undefined ? 1 : props.match.params.pageNumber)\n    },)\n\n\n    if (moviesList.length === 0) {\n        return <div className={\"main-page-loading\"}><p className={\"loading-text\"}>loading</p></div>;\n    } else {\n        return (\n            <div key={JSON.stringify(moviesList) + pageNumber} className={\"main-page\"}>\n\n                <div className={\"app-bar\"}>\n                    <img src={require(\"../assets/logo.PNG\")} alt=\"\" className={\"app-bar-logo\"}/>\n                    <SearchPage/>\n                </div>\n                <div className={\"movies-grid\"}>\n                    {\n                        moviesList.map((element) => {\n                            return <Card\n                                cardDetails={element}\n                            />\n                        })\n                    }\n                </div>\n                <div className={'footer'}>\n                    <Link to={`/page/${Number(pageNumber + 1)}`}>\n                        <i className=\"fa fa-angle-double-right search-button\"/>\n                    </Link>\n                    {pageNumber > 1 && <Link to={`/page/${pageNumber - 1}`}>\n                        <i className=\"fa fa-angle-double-left search-button\"/>\n                    </Link>}\n                    <div className={\"credits-section\"}>\n                        <p className={\"tech-stack\"}>Tech Used: React JS, HTML, CSS</p>\n                    </div>\n\n\n                </div>\n            </div>\n        )\n    }\n\n\n}\n\n\nexport default Grid;\n","import React from \"react\";\nimport \"./styles.css\"\n\nclass DetailsPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            movie: null,\n            playVid: false\n        }\n    }\n\n    componentDidMount() {\n        this.getMovieData()\n    }\n\n    toggleYoutube() {\n        this.setState({\n            playVid: !this.state.playVid\n        })\n    }\n\n    closeYoutube() {\n        this.setState({\n            playVid: false\n        })\n    }\n\n    async getMovieData() {\n        console.log(\"started\");\n        fetch('https://api.themoviedb.org/3/movie/' + this.props.match.params.id + '?api_key=9b153f4e40437e115298166e6c1b997c&append_to_response=videos')\n            .then(async (response) => {\n                let data = await response.json();\n                console.log(data);\n                this.setState({\n                    movie: data\n                })\n            });\n    }\n\n\n    render() {\n        if (this.state.movie === null) {\n            return <div className={\"main-page-loading\"}><p className={\"loading-text\"}>Loading</p></div>;\n        } else {\n            return (\n                <div className={\"details-page\"}\n                     style={{backgroundImage: `url(${\"https://image.tmdb.org/t/p/original\" + this.state.movie.backdrop_path})`}}>\n                    <div className={\"overlay\"}/>\n                    <div className={\"details-div\"}>\n                        <div className={\"details-image-youtube\"}>\n                            <i className=\"fa fa-youtube-play youtube-icon\" onClick={() => this.toggleYoutube()}/>\n                            <img src={\"https://image.tmdb.org/t/p/original\" + this.state.movie.poster_path} alt=\"\"\n                                 className={\"details-poster\"}/>\n                        </div>\n                        <div className={\"details-text\"}>\n                            <p className={\"details-title\"}>{this.state.movie.original_title}</p>\n                            <p className={\"details-overview\"}>{this.state.movie.overview}</p>\n                        </div>\n                    </div>\n                    {this.state.playVid && <div className={\"youtube-overlay\"} onClick={() => this.closeYoutube()}/>}\n                    {this.state.playVid &&\n                    <YouTube title={this.state.movie.original_title} id={`${this.state.movie.videos.results[0].key}`}/>}\n                </div>\n            );\n        }\n    }\n}\n\nfunction YouTube(props) {\n    return (\n        <div className={\"youtube-popup\"}>\n            <iframe title={props.title}\n                    style={{\n                        position: \"absolute\",\n                        top: \"25%\",\n                        left: \"25%\",\n                        width: \"50%\",\n                        height: \"50%\"\n                    }}\n                    src={`https://www.youtube.com/embed/${props.id}`}\n                    frameBorder=\"0\"\n            />\n        </div>\n    );\n};\n\nexport default DetailsPage;","import React from 'react';\nimport Grid from './Grid'\nimport './App.css';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport DetailsPage from \"./details_page\";\n\n\nfunction App() {\n    return (\n        <Router>\n            <Switch>\n                {/*<Route path={\"/search\"} component={SearchPage}/>*/}\n                <Route path={\"/details/:id\"} component={DetailsPage}/>\n                <Route path={\"/search/:query\"} component={Grid}/>\n                <Route path={\"/page/:pageNumber\"} component={Grid}/>\n                <Route path={\"\"} component={Grid}/>\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}